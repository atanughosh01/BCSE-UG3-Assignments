void MainWindow::on_bresenhamMidpointEllipse_clicked()
{
    clock_t tStart = clock();
    double tPoint = 0.0;

    p1.setX(ui->frame->x);
    p1.setY(ui->frame->y);
    int rx = ui->r1spinbox->value();
    int ry = ui->r2spinbox->value();
    int x_centre=p1.x();
    int y_centre=p1.y();
    int k = ui->gridspinbox->value();//GridSize

    x_centre=(x_centre/k)*k+k/2;
    y_centre=(y_centre/k)*k+k/2;

    int x=0;
    int y=ry;
    int rx2=rx*rx;
    int ry2=ry*ry;
    int tworx2=2*rx2;
    int twory2=2*ry2;
    int px=0.0;
    int py=tworx2*y;

    //For first region
    int p1=ry2-rx2*ry+(0.25)*rx2; //Initial value of decision paramemter
    while(px<py)
    {
        clock_t t1 = clock();

        point(x_centre+x*k,y_centre+y*k, 204, 0, 0);
        point(x_centre-x*k,y_centre+y*k, 102, 255, 255);
        point(x_centre-x*k,y_centre-y*k, 51, 0, 102);
        point(x_centre+x*k,y_centre-y*k, 255, 153, 51);

        delay();

        clock_t t2 = clock();
        tPoint += (t2 - t1);

        x++;
        px+=twory2;
        if(p1>=0) {
            y--;
            py-=tworx2;
            p1=p1+ry2+px-py;

        }  else{
            p1=p1+ry2+px;
        }
    }

    //For second region
    p1=ry2*((double)x+0.5)*((double)x+0.5)+rx2*(y-1)*(y-1)-rx2*ry2; //Initial value of decision paramemte
    while(y>=0)
    {
        clock_t t3 = clock();

        point(x_centre+x*k,y_centre+y*k, 255, 255, 102);
        point(x_centre-x*k,y_centre+y*k, 204, 255, 153);
        point(x_centre-x*k,y_centre-y*k, 255, 204, 204);
        point(x_centre+x*k,y_centre-y*k, 0, 128, 255);

        delay();

        clock_t t4 = clock();
        tPoint += (t4 - t3);

        y--;
        py-=tworx2;
        if(p1<=0){
            x++;
            px+=twory2;
            p1=p1+rx2-py+px;

        }  else  {
            p1=p1+rx2-py;
        }
    }

    clock_t tEnd = clock();
    double tBresenhamCircle = (tEnd - tStart) - tPoint;
    ui->time_elapsed_ellipse->setText(QString::number(tBresenhamCircle*1000/CLOCKS_PER_SEC));
}
